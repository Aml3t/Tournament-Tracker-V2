@model MVCUI.Models.TournamentMVCDetailsModel

@{
    ViewBag.Title = "Details";
}

<h2>Tournament: @Html.DisplayFor(model => model.TournamentName)</h2>

<div>
    <hr />
    <div class="row">
        <div class="col-md-3">
            <h2>@Html.DisplayNameFor(model => model.Rounds)</h2>
            <ul class="list-unstyled tourney-display">
                @foreach (var item in Model.Rounds)
                {
                    <li>
                        @Html.ActionLink(item.RoundName, "Details", "Tournaments", new { roundId = item.RoundNumber }, new { })
                        &nbsp;
                        @if (item.Status == RoundStatus.Complete)
                        {
                            <span class="label label-default">completed</span>
                        }
                        else if (item.Status == RoundStatus.Active)
                        {
                            <span class="label label-success">active</span>
                        }
                        else if (item.Status == RoundStatus.Locked)
                        {
                            <span class="label label-danger">active</span>
                        }
                    </li>
                }
        </div>
        <div class="col-md-9">
            <ul>
                @foreach (var item in Model.Matchups)
                {
                    using (Html.BeginForm())
                    {
                        @Html.AntiForgeryToken()

                        <div class="form-horizontal">
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            <div class="form-group">
                                <label class="control-label">@item.FirstTeamName</label>
                                <div class="">
                                    @Html.EditorFor(model => item.FirstTeamScore, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => item.FirstTeamScore, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                <label class="control-label">@item.SecondTeamName</label>
                                <div class="">
                                    @Html.EditorFor(model => item.SecondTeamName, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => item.SecondTeamName, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group" style="margin-top: 0.5em;">
                                <div class="col-md-offset-2 col-md-10">
                                    <input type="submit" value="Score Match" class="btn btn-default creta box-display" />
                                </div>
                            </div>
                        </div>
                    }
                }
            </ul>

        </div>
    </div>
</div>
<p>
    @Html.ActionLink("Back to List", "Index")
</p>
